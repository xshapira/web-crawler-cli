[tool.poetry]
name = "Web Crawler CLI"
version = "0.0.2"
description = ""
authors = ["Max Shapira <max@winoutt.com>"]

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.31.0"
beautifulsoup4 = "^4.12.3"

[tool.poetry.group.dev.dependencies]
ruff = "^0.2.1"
mypy = "^1.8.0"
pre-commit = "^3.6.1"
pytest = "^8.0.0"
pytest-sugar = "^1.0.0"
requests-mock = "^1.11.0"
pytest-mock = "^3.12.0"
pysnooper = "^1.2.0"

[tool.mypy]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
check_untyped_defs = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ['tests.*']
disallow_untyped_defs = false
strict_equality = false

[tool.ruff]
line-length = 88
exclude = ['.git', '__pycache__', '__init__.py', '.mypy_cache', '.pytest_cache']
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP", # pyupgrade
]
ignore = [
  "E501", # line too long
  "C901", # Comprehension is too complex (11 > 10)
  "W191", # indentation contains tabs
  "E402",
]
unfixable = ["F841"]
extend-include = ["*.ipynb"]

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
